name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          git \
          ffmpeg \
          libsdl2-dev \
          libsdl2-image-dev \
          libsdl2-mixer-dev \
          libsdl2-ttf-dev \
          libportmidi-dev \
          libswscale-dev \
          libavformat-dev \
          libavcodec-dev \
          zlib1g-dev \
          libgstreamer1.0 \
          gstreamer1.0-plugins-base \
          gstreamer1.0-plugins-good \
          unzip

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Download Android commandline-tools (latest)
      run: |
        ANDROID_SDK_ROOT=$HOME/android-sdk
        mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
        cd "$ANDROID_SDK_ROOT"
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdtools.zip
        unzip -q cmdtools.zip -d cmdline-tools
        mv cmdline-tools/cmdline-tools cmdline-tools/latest
        echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH

    - name: Pre-create yes tool for licenses
      run: |
        sudo ln -sf /usr/bin/yes /usr/local/bin/yes

    - name: Accept Android SDK licenses (non-interactive)
      run: |
        yes | sdkmanager --licenses || true

    - name: Force Buildozer to use local SDK path
      run: |
        echo "export ANDROIDSDK=$HOME/android-sdk" >> $GITHUB_ENV
        echo "export ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV

    - name: Install Android SDK packages (pin stable)
      env:
        ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
      run: |
        sdkmanager --update || true
        sdkmanager \
          "platform-tools" \
          "platforms;android-34" \
          "build-tools;34.0.0"
        sdkmanager --list | sed -n '1,200p'

    - name: Configure buildozer.spec SDK pins
      run: |
        sed -i 's/^android\.api = .*/android.api = 34/' buildozer.spec
        sed -i 's/^android\.sdk = .*/android.sdk = 34/' buildozer.spec
        sed -i 's/^android\.ndk = .*/android.ndk = 25b/' buildozer.spec
        sed -i 's/^android\.minapi = .*/android.minapi = 21/' buildozer.spec
        # Ensure build_tools dir exists
        mkdir -p "$HOME/android-sdk/build-tools/34.0.0"

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython==0.29.33
        pip install -r requirements.txt

    - name: Build APK
      env:
        ANDROIDSDK: ${{ env.ANDROID_SDK_ROOT }}
        ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
      run: |
        buildozer android debug

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: LocalLLM-ChatApp-APK
        path: bin/*.apk
        retention-days: 90

    - name: Create Release
      if: github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v1.0-${{ github.run_number }}
        name: Local LLM Chat App v1.0-${{ github.run_number }}
        body: |
          ## Local LLM Chat App

          A ChatGPT-like Android application that connects to your local LM Studio server.

          ### Installation
          1. Download the APK file below
          2. Install on your Android device
          3. Configure your LM Studio server URL in the app settings

          ### What's New
          - ChatGPT-like interface
          - Connects to local LM Studio server
          - Material Design UI
          - Configurable settings
          - Conversation history

          ### Setup Instructions
          1. Install LM Studio on your computer and load a model
          2. Start the server in LM Studio (default: http://localhost:1234)
          3. Install this APK on your Android device
          4. Open the app and configure settings with your computer's IP address
          5. Start chatting with your local AI!
        files: bin/*.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}