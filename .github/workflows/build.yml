name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          git \
          ffmpeg \
          libsdl2-dev \
          libsdl2-image-dev \
          libsdl2-mixer-dev \
          libsdl2-ttf-dev \
          libportmidi-dev \
          libswscale-dev \
          libavformat-dev \
          libavcodec-dev \
          zlib1g-dev \
          libgstreamer1.0 \
          gstreamer1.0-plugins-base \
          gstreamer1.0-plugins-good \
          unzip

    - name: Accept Android SDK licenses
      run: |
        yes | sdkmanager --licenses || true
      shell: bash

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        packages: |-
          build-tools;34.0.0
          build-tools;33.0.2
          platforms;android-34
          platforms;android-33
          platform-tools

    - name: Cache Buildozer global directory
      uses: actions/cache@v4
      with:
        path: ~/.buildozer
        key: buildozer-global-${{ hashFiles('buildozer.spec') }}

    - name: Cache Buildozer directory
      uses: actions/cache@v4
      with:
        path: .buildozer
        key: buildozer-${{ hashFiles('buildozer.spec') }}

    - name: Pin Build Tools in spec
      run: |
        sed -i 's/^android\.api = .*/android.api = 34/' buildozer.spec
        sed -i 's/^android\.sdk = .*/android.sdk = 34/' buildozer.spec
        sed -i 's/^android\.ndk = .*/android.ndk = 25b/' buildozer.spec
        sed -i 's/^android\.minapi = .*/android.minapi = 21/' buildozer.spec

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython==0.29.33
        pip install -r requirements.txt

    - name: Build APK
      run: |
        buildozer android debug

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: LocalLLM-ChatApp-APK
        path: bin/*.apk
        retention-days: 90

    - name: Create Release
      if: github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v1.0-${{ github.run_number }}
        name: Local LLM Chat App v1.0-${{ github.run_number }}
        body: |
          ## Local LLM Chat App

          A ChatGPT-like Android application that connects to your local LM Studio server.

          ### Installation
          1. Download the APK file below
          2. Install on your Android device
          3. Configure your LM Studio server URL in the app settings

          ### What's New
          - ChatGPT-like interface
          - Connects to local LM Studio server
          - Material Design UI
          - Configurable settings
          - Conversation history

          ### Setup Instructions
          1. Install LM Studio on your computer and load a model
          2. Start the server in LM Studio (default: http://localhost:1234)
          3. Install this APK on your Android device
          4. Open the app and configure settings with your computer's IP address
          5. Start chatting with your local AI!
        files: bin/*.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}